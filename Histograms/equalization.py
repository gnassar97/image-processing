# -*- coding: utf-8 -*-
"""Lab1_part_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14sTIBEo-nnEmsaYxnHhSdkDUKWZBMq9a
"""

!wget -q -nc https://raw.githubusercontent.com/pseprivamirakbarnejad/cmput206lab/master/Lab1/test.jpg
!ls

import numpy as np 
from skimage import io, exposure, img_as_ubyte
import matplotlib.pyplot as plt

sample_data = 'test.jpg'


def main():
    img_input = img_as_ubyte(io.imread(sample_data, True))
    my_histo(img_input)
    p2(img_input)   


    
def my_histo(file_input):
    img_array = np.zeros(256, dtype=int) #Initialize empty array size 256

    for i in file_input: 
        for j in i:
            img_array[j]+=1

    plt.imshow(file_input, cmap='gray')
    plt.show()
    plt.xlim(0,256)
    plt.plot(img_array)    
    plt.show()

            
def p2(file_input):
    img_array = np.zeros(256, dtype=int) #Initialize empty array size 256

    for i in file_input: 
        for j in i:
            img_array[j]+=1
            
    X = len(file_input) 
    Y = len(file_input[0])

    eq_file = file_input
    cumulative = np.cumsum(img_array)
    XY = X*Y # Number of rows and columns
    
    for i in range(X):
      for j in range(Y):
        eq_file[i][j] = np.floor(((255/XY)*cumulative[file_input[i][j]]) + 0.5) #Gray levels used divided by number of rows and columns * the cumulative sum of the array
                                                                                #Added 0.5 for proper rounding 

    plt.imshow(eq_file, cmap='gray')
    plt.show()

    new_array = np.zeros(256, dtype=int) 
    for i in eq_file:
      for j in i:
        new_array[j]+=1
    plt.xlim(0,256)
    plt.plot(new_array)
    plt.show()

  
  
main()