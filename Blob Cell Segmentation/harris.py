# -*- coding: utf-8 -*-
"""Lab6_part1_H04.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14D9hbdGrqymKfWIeoSkHPunefKcApLcF

#TODO
##Part 1. Detect Corners using Harris Corner Detection Algorithm 

  1.1. Use skimage.feature.corner_harris

  1.2. Use skimage.feature.corner_peaks

  1.3 Show the result

##Part 2. Show that Harris corner detection is rotation invarient 

  3.1. Rotate the image by 10,20,30,..., 180 degrees

  3.2. After each rotation, detect corners and show the result

##Part 3. Explain why is Harris corner detection rotation invarient?
"""

!wget -q -nc https://raw.githubusercontent.com/pseprivamirakbarnejad/cmput206lab/master/Lab6/Img_061.png
!ls

"""#Part 1"""

import numpy as np
import matplotlib.pyplot as plt
from skimage import feature, io

img = io.imread("Img_061.png")

img_harris = feature.corner_harris(img)

img_peaks = feature.corner_peaks(img_harris)

fig, im = plt.subplots(nrows=1, ncols=2, figsize=(15,8), sharex=True, sharey=True)
plt.subplot(1,2,1),plt.imshow(img_harris, cmap = 'gray'),plt.title('Harris')
plt.xticks([]), plt.yticks([])
plt.subplot(1,2,2),plt.imshow(img_peaks, cmap = 'gray'),plt.title("Peaks")
plt.xticks([]), plt.yticks([])
plt.show()

"""#Part 2"""

import numpy as np
import matplotlib.pyplot as plt
from skimage import feature, io, transform

img = io.imread("Img_061.png")

img_harris = feature.corner_harris(img)



max_counter = 18
counter = 0

fig, im = plt.subplots(nrows=1, ncols=2, figsize=(100,50), sharex=True, sharey=True)
plt.subplot(18,1,1),plt.imshow(img_harris, cmap = 'gray')
plt.xticks([]),plt.yticks([])

img_list = []

for i in range(1,18):
  if counter != max_counter:
    img_output = transform.rotate(img, 10*i,resize = True)
    img_output = feature.corner_harris(img_output)
    plt.subplot(18,1,1+i),plt.imshow(img_output, cmap = 'gray')
    plt.xticks([]), plt.yticks([])
    counter += 1







plt.show()

"""#Part 3

Corners are generally rotation invariant, not just the harris corner detector. Corners are (generally) invariant to translation, and intensity changes as well. This is nice because corners are likely the most important parts of an image. However they are not always invariant to rotation, and the harris corner detector's algorithm allows it so remain rotation invariant by calculating the smallest eigenvalue of the structure tensor, and then finding the points via non-maximum suppression.
"""